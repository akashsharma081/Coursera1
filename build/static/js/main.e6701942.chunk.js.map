{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","console","log","active","RenderLeader","tag","left","middle","object","body","heading","About","leaders","list","title","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","JSON","stringify","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","CommentForm","toggleModal","state","isModalOpen","setState","alert","postComment","dishId","rating","author","comment","outline","isOpen","toggle","value","RenderDish","top","RenderComments","comments","cmnts","commnts","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","username","password","remember","checked","preventDefault","Fragment","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","addLeaders","leadersFailed","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","leaderLoading","leaderErrMess","exact","match","parseInt","params","commentsErrMess","selectedDish","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e6701942.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n// import { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        if (typeof item === 'undefined') {\r\n            return (<div></div>)\r\n        } else {\r\n            return (\r\n                // <FadeTransform\r\n                //     in\r\n                //     transformProps={{\r\n                //         exitTransform: 'scale(0.5) translateY(-50%)'\r\n                //     }}>\r\n                    <Card>\r\n                        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{item.name}</CardTitle>\r\n                            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                            <CardText>{item.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                // </FadeTransform>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n    // function RenderMenuItem (props) {}\n    function RenderMenuItem ({dish, onClick}) {\n        return (\n            <Card> \n                <Link to={`/menu/${dish.id}`} >\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />                   \n                        <CardImgOverlay>\n                            <CardTitle> {dish.name} </CardTitle>\n                        </CardImgOverlay>  \n                </Link>      \n            </Card>\n        );\n    }\n\n    // function Menu (props) {}\n    const Menu = (props) => {\n        // map (JS keyword): iterating over every dish in the dishes array here\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                // key: every item require key attribute to specift it.\n                // the key helps React to recognise each one of these elements, uniquely. \n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish} />\n                </div>    \n            );\n        }); // take the JS objects\n\n        console.log('Menu component render invoked')\n\n        if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">            \n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\"> \n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else\n\n         // return what needs to diaplay on the UI in this conponent. (return view)\n        return ( \n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem> <Link to='home'>Home</Link> </BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>    \n                </div>    \n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n\nexport default Menu;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n// import { Fade, Stagger } from 'react-animation-components';\r\nimport { Loading } from './LoadingComponent';\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <Media tag=\"li\">\r\n            <Media left middle>\r\n                <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <p>{leader.designation}</p>\r\n                <p>{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n    let leaders\r\n    if (props.leaders.isLoading) {\r\n        leaders = (\r\n            <div className=\"container\">\r\n                <Loading />\r\n            </div>\r\n        );\r\n    } else if (props.leaders.errMess) {\r\n        leaders = (\r\n            <div className=\"container\">\r\n                <h2>Failure loading leaders: {props.leaders.errMess}</h2>\r\n            </div>\r\n        )\r\n    } else {\r\n        leaders = (\r\n            <Media list>\r\n                {/* <Stagger in> */}\r\n                    {\r\n                        props.leaders.leaders.map((leader) => {\r\n                            return (\r\n                                // <Fade in>\r\n                                    <div key={leader.id} className=\"col-12 mt-5\">\r\n                                        <RenderLeader leader={leader} />\r\n                                    </div>\r\n                                // </Fade>\r\n                            );\r\n                        })\r\n                    }\r\n                {/* </Stagger> */}\r\n            </Media>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    {leaders}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label\r\n} from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum,\r\n            values.email, values.agree, values.contactType, values.message)\r\n        this.props.resetFeedbackForm();\r\n        // event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component }  from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, \n        Breadcrumb, BreadcrumbItem,  Button, Modal, ModalHeader,\n        ModalBody, Label , Col, Row } from 'reactstrap';\nimport { Link  } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n// import { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nexport class CommentForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this); \n        this.state = {\n            isModalOpen: false\n        };\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <div>\n                <Button color=\"secondary\" outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\">Submit Comment</span>\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label md={12} htmlFor=\"rating\">Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label md={12} htmlFor=\"author\">Your Name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\" \n                                        messages={{\n                                            required: 'Required ',\n                                            minLength: 'Must be greater than 3 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label md={12} htmlFor=\"comment\">Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\" \n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\n    // function RenderDish(props){}\n    function RenderDish({dish}) {\n        \n        if (dish != null) {\n            return (\n                <div className=\"col-12 col-md-5 m-1\">\n                    {/* <FadeTransform\n                        in\n                        transformProps={{\n                            exitTransform: 'scale(0.5) translateY(-50%)'\n                        }}> */}\n                            <Card>\n                                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                                <CardBody>\n                                    <CardTitle>{dish.name}</CardTitle>\n                                    <CardText>{dish.description}</CardText>\n                                </CardBody>\n                            </Card>\n                        {/* </FadeTransform> */}\n                </div>    \n            );\n        } else {\n            return (\n                <div></div>\n            );\n        }\n    }\n\n    // function RenderComments(props){}\n    function RenderComments({comments, postComment, dishId}) {\n        if (comments != null) {\n            const cmnts = comments.map((commnts) => {\n                return (\n                    <ul key={commnts.id} className=\"list-unstyled\">\n                        <li>\n                            <p> {commnts.comment} </p>\n                            <p> -- {commnts.author},\n                                &nbsp;\n                                {new Intl.DateTimeFormat('en-US', {\n                                    year: 'numeric',\n                                    month: 'short',\n                                    day: '2-digit'\n                                }).format(new Date(Date.parse(commnts.date)))}\n                            </p>\n                        </li>\n                    </ul>\n                );\n            });\n\n            return (\n                <div className=\"col-12 col-md-5 m-1\">\n                    <h4> Comments </h4>\n                    {cmnts}\n                    <CommentForm dishId={dishId} postComment={postComment}/>\n                    \n      \n                </div>\n            );  \n        // if comments is empty     \n        } else {\n            return (\n                <div></div>\n            );\n        }\n    }\n    \n    const DishDetail = (props) => {\n        if (props.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">            \n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">            \n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dish != null) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem> <Link to='home'>Home</Link> </BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>    \n                    </div>\n                    <div className=\"row\">\n                        <RenderDish dish={props.dish} />\n                        <RenderComments comments={props.comments} \n                         postComment={props.postComment}\n                         dishId={props.dish.id}/>\n                    </div>        \n                </div>\n            );\n        } else {\n            return (\n                <div></div>\n            );\n        }\n    }\n\n \nexport default DishDetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,Button, Modal, ModalHeader, ModalBody,Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n      }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" \n                                alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\"> \n                                        <span className=\"fa fa-home fa-lg\"></span> Home \n                                    </NavLink> \n                                </NavItem>    \n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\"> \n                                        <span className=\"fa fa-info fa-lg\"></span> About Us \n                                    </NavLink>    \n                                </NavItem> \n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\"> \n                                        <span className=\"fa fa-list fa-lg\"></span> Menu \n                                    </NavLink>    \n                                </NavItem>    \n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\"> \n                                        <span className=\"fa fa-info fa-lg\"></span> Contact Us \n                                    </NavLink>    \n                                </NavItem> \n                            </Nav>\n\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>    \n                    </div>\n\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                            <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                        <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                                <FormGroup>\n                                    <Label htmlFor=\"username\">Username</Label>\n                                    <Input type=\"text\" id=\"username\" name=\"username\"\n                                        innerRef={(input) => this.username = input} />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Label htmlFor=\"password\">Password</Label>\n                                    <Input type=\"password\" id=\"password\" name=\"password\"\n                                        innerRef={(input) => this.password = input}  />\n                                </FormGroup>\n                                <FormGroup check>\n                                    <Label check>\n                                        <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input}  />\n                                        Remember me\n                                    </Label>\n                                </FormGroup>\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                            </Form>\n                        </ModalBody>\n                    </Modal>\n                </Navbar>\n\n                <Jumbotron>   \n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\"> \n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>    \n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header; ","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('post comments', error.message);\r\n            alert('Your comment could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\n// going to inform somebody saying that the dishes are beginning to be loaded\r\n// and you need to wait for the dishes to be loaded\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n// The methods you need are fetchX xLoading xFailed addX\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            alert(\"Thank you for your feedback!  \" + JSON.stringify(response));\r\n            dispatch(addFeedback(response));\r\n        })\r\n        .catch(error => {\r\n            console.log('post feedback', error.message);\r\n            alert('Your feedback could not be posted\\nError: ' + error.message);\r\n        });\r\n};\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const FEEDBACK_FAILED = 'FEEDBACK_FAILED';\r\n","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders[3]}\r\n          leaderLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location={this.props.location}>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onDishSelect(dishId) {\r\n    this.setState({ selectedDish: dishId });\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = \r\n    { errMess: null, \r\n    comments:[]}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state ={\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\n        \r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n        }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true, errMess: null, leaders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// import React from 'react';\nimport React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'; // Provider is map with react component \nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {  \n    return (\n      // adding BrowserRouter. the application now is congigured to make use of the react router\n      <Provider store={store}>\n       <BrowserRouter>\n            <div className=\"App\">\n                <Main /> \n            </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}